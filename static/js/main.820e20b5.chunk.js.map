{"version":3,"sources":["components/static-utils.js","components/reactish-utils.js","components/github.js","App.js","reportWebVitals.js","index.js"],"names":["GitBanner","style","display","flexDirection","alignItems","flexBasis","justifyContent","Github","color","size","fontSize","GitCA","StyledCA","styled","div","Input","For","onChange","st","StyledInput","textAlign","paddingBottom","TextInput","name","value","type","SubmitBtn","onSubmit","done","StyledBtn","primary","onClick","disabled","label","useState","React","Styles","GithubSignup","username","password","state","setState","event","target","id","Card","setTimeout","alert","theme","global","font","family","height","button","border","App","Grommet","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAIaA,EAAY,kBAAI,sBAC5BC,MAAO,CACNC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,UAAW,OACXC,eAAgB,iBANW,UAO5B,cAACC,EAAA,EAAD,CAAQC,MAAM,QAAQC,KAAK,UAC3B,qBAAKR,MAAO,CAACS,SAAU,QAAvB,mCAKYC,EAAQ,kBAAK,cAACC,EAAD,UACzB,kDACe,4DAIVA,EAAWC,UAAOC,IAAV,oJ,gBCnBDC,EAAQ,SAAC,GAAD,IAAEC,EAAF,EAAEA,IAAKC,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,GAAjB,OACrB,eAACC,EAAD,WACU,aAARH,EACD,qBAAKf,MAAO,CAACmB,UAAW,OAAOV,SAAU,MAAOW,cAAc,SAA9D,uCACA,sBAAKpB,MAAO,CAACoB,cAAe,QAAQnB,QAAS,OAAQQ,SAAU,MAAMJ,eAAgB,iBAArF,UACC,4CACD,sBAAML,MAAO,CAACO,MAAO,WAArB,iCAEG,cAACc,EAAA,EAAD,CACIC,KAAMP,EACNQ,MAAON,EACPD,SAAUA,EACVQ,KAAe,aAART,EAAqB,WAAa,aAI3CG,EAAcN,UAAOC,IAAV,4GASJY,EAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAUC,EAAZ,EAAYA,KAAZ,OACzB,cAACC,EAAD,UACA,cAAC,IAAD,CACIC,SAAO,EACPC,QAASJ,EACTK,WAAWJ,EACXK,MAASL,EAAmB,gBAAZ,eAGdC,EAAYhB,UAAOC,IAAV,6O,QC/BRoB,EAAYC,IAAZD,SAuCDE,EAASvB,UAAOC,IAAV,6aAwBGuB,EA9DM,WACpB,MAA0BH,EAAS,CAC5BI,SAAU,GACVC,SAAU,GACVX,MAAM,IAHb,mBAAOY,EAAP,KAAcC,EAAd,KAYMxB,EAAW,SAAAM,GAAI,OAAI,SAAAmB,GAAK,OAAID,EAAS,2BAAID,GAAL,kBAAajB,EAAOmB,EAAMC,OAAOnB,WAE3E,OAAO,cAACY,EAAD,UACP,sBAAKQ,GAAG,OAAR,UACC,cAAC,EAAD,IACA,cAACC,EAAA,EAAD,CAAMD,GAAG,OAAT,SACC,iCACA,cAAC,EAAD,CACC5B,IAAM,WACNC,SAAUA,EAAS,YACnBC,GAAIsB,EAAMF,WACX,cAAC,EAAD,CACCtB,IAAK,WACLC,SAAUA,EAAS,YACnBC,GAAIsB,EAAMD,WACX,cAAC,EAAD,CACCZ,SAtBc,WAEhB,OADAc,EAAS,2BAAID,GAAL,IAAYZ,MAAM,KACnBkB,YAAW,WACjBL,EAAS,2BAAID,GAAL,IAAYZ,MAAM,KAC3BmB,MAAMP,EAAMF,SAAW,uBACrB,MAkBAV,KAAMY,EAAMZ,YAGd,cAAC,EAAD,U,QCrCIoB,EAAQ,CACZC,OAAQ,CACNC,KAAM,CACJC,OAAQ,SACR1C,KAAM,OACN2C,OAAQ,SAGZC,OAAQ,CACNC,OAAQ,CACN9C,MAAO,oBAeE+C,MAVf,WACE,OACC,cAACC,EAAA,EAAD,CAASR,MAAOA,EAAhB,SACC,qBAAKS,UAAU,MAAf,SACC,cAAC,EAAD,SCXUC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACC,cAAC,EAAD,QAGHC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.820e20b5.chunk.js","sourcesContent":["import React from \"react\";\nimport {Github} from \"grommet-icons\";\nimport styled from \"styled-components\";\n\nexport const GitBanner = ()=><div \n\tstyle={{\n\t\tdisplay: \"flex\", \n\t\tflexDirection: \"column\",\n\t\talignItems: 'center',\n\t\tflexBasis: \"6rem\",\n\t\tjustifyContent: \"space-between\"}}>\n\t<Github color='plain' size='large' />\n\t<div style={{fontSize: \"130%\"}}>\n\t\tSign in to Github\n\t</div>\n</div>\n\nexport const GitCA = ()=> <StyledCA>\n <div>\n\tNew to Github? <span>Create an account.</span>\t\n</div>\t\n</StyledCA>;\n\nconst StyledCA = styled.div`\nborder: 1px solid rgba(0,0,0,0.2);\nborder-radius: 5px;\nwidth: 18rem;\npadding: 0.4em 0;\nspan{\n\tcolor: #1d4eee;\n}\n`\n","import React from \"react\"\r\nimport {TextInput, Button as GrommetButton} from \"grommet\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const Input = ({For, onChange, st})=> \r\n<StyledInput>\r\n\t{For === \"username\" ? \r\n\t<div style={{textAlign: \"left\",fontSize: \"80%\", paddingBottom:\"0.2em\"}}>Username or email address</div> :\r\n\t<div style={{paddingBottom: \"0.2em\",display: \"flex\", fontSize: \"80%\",justifyContent: \"space-between\"}}>\r\n\t\t<span>Password</span>\r\n\t<span style={{color: '#1d4eee'}}>forgot password?</span>\r\n\t</div>}\r\n    <TextInput \r\n        name={For}\r\n        value={st}\r\n        onChange={onChange}\r\n        type= {For === \"password\" ? \"password\" : \"text\"}\r\n    />\r\n</ StyledInput>\r\n\r\nconst StyledInput = styled.div`\r\ninput{\r\n    height: 1.8em;\r\n    width: 16rem;\r\n    background-color: white;\r\n}\r\n`\r\n\r\n\r\nexport const SubmitBtn = ({onSubmit, done})=> \r\n<StyledBtn>\r\n<GrommetButton\r\n    primary \r\n    onClick={onSubmit}\r\n    disabled={!done ? false : true}\r\n    label= {!done ? \"Sign in\" : \"signing in...\"}\r\n/>\r\n</StyledBtn>;\r\nconst StyledBtn = styled.div`\r\nbutton{\r\n    width: 16rem;\r\n    font-size: 95%;\r\n    background-color: rgb(8, 165, 8);\r\n    border-radius: 5px;\r\n    &:disabled{\r\n        background-color: rgba(8, 175, 8);\r\n        opacity: 0.76;\r\n    },\r\n}\r\n`\r\n","import React from \"react\";\nimport {GitBanner as Banner, GitCA as ExtraInfo} from \"./static-utils\";\nimport {Input, SubmitBtn} from \"./reactish-utils\";\n\nimport styled from \"styled-components\";\nimport {Card} from \"grommet\";\n\nconst {useState} = React;\nconst GithubSignup = () => {\n\tconst [state, setState] = useState({\n        username: \"\",\n        password: \"\",\n        done: false\n    })\n\n\tconst onSubmit = ()=> {\n\t\tsetState({...state, done: true})\n\t\treturn setTimeout(()=> {\n\t\t\tsetState({...state, done: false})\n\t\talert(state.username + \" you're signed in\")\n\t}, 2000)}\n\tconst onChange = name => event => setState({...state, [name]: event.target.value})\n\n\treturn <Styles>\n\t<div id=\"main\">\n\t\t<Banner />\n\t\t<Card id=\"card\">\n\t\t\t<form>\n\t\t\t<Input \n\t\t\t\tFor = \"username\"\n\t\t\t\tonChange={onChange(\"username\")}\n\t\t\t\tst={state.username} />\n\t\t\t<Input \n\t\t\t\tFor= \"password\"\n\t\t\t\tonChange={onChange(\"password\")}\n\t\t\t\tst={state.password} />\n\t\t\t<SubmitBtn \n\t\t\t\tonSubmit={onSubmit}\n\t\t\t\tdone={state.done} />\n\t\t\t</form>\n\t\t</Card>\n\t\t<ExtraInfo />\n\t</div>\n\t</Styles>\n};\n\nconst Styles = styled.div`\npadding-top: 1.8rem;\ndisplay: flex;\ndiv#main{\n\tflex-basis: 12rem;\n\tmargin: 0 auto;\n\tdisplay: flex;\n\tgap:1em;\n\tflex-direction: column;\n\talign-items: center;\n\t#card{\n\t\tbackground-color:#F6F8FA ;\n\t\tborder-radius: 5px;\n\t\tpadding:1rem;\n \t\tform{\n\t\t\tmin-height: 12rem;\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\tjustify-content: space-around;\n\t\t}\n\t}\n}\n`\n\nexport default GithubSignup;\n","import './App.css';\nimport GithubSignup from \"./components/github\"\nimport { Grommet } from 'grommet';\n\nconst theme = {\n  global: {\n    font: {\n      family: 'Roboto',\n      size: '18px',\n      height: '20px',\n    },\n  },\n  button: {\n    border: {\n      color: 'rgb(8, 175, 8)'\n    }\n  }\n};\n\nfunction App() {\n  return (\n   <Grommet theme={theme}>\n    <div className=\"App\">\n    \t<GithubSignup />\n    </div>\n   </Grommet>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {RecoilRoot} from \"recoil\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n    \t<App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}